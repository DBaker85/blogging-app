input,
textarea,
select {
  display: block;
    width: 100%;
    height: 30px;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.5;
    color: $color-text;
    background-color: #fff;
    background-image: none;
    border: 1px solid $color-dark-lightest;
    border-radius: $border-radius-main;
    transition: all 0.30s ease-in-out;
    margin: 5px 0;

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $color-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }
  &:focus{
  	box-shadow: 0 0 3px rgba($color-primary, .5);
  	outline: none;
  }

  // [converter] extracted textarea& to textarea.form-control
}

// Reset height for `textarea`s
textarea {
  height: auto;
  min-height: 200px;
}


// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}

input[type="search"] {
  box-sizing: border-box;
}

.search-input{
  width: 0px;
  padding: 0px;
  border: 0;
  .active &{
    width: 300px !important;
    padding: 3px;
  }
}




