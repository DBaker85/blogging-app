{"scsslint":{
  "app/sass/_main-color.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 1,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `themes/_grey.scss` should be written as `themes/grey`",
      "linter": "ImportPath"
    },
    {
      "line": 1,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    }
  ],
  "app/sass/base/_all.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Imported partial `_reset.scss` should be written as `reset`",
      "linter": "ImportPath"
    },
    {
      "line": 1,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 9,
      "length": 14,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 9,
      "length": 14,
      "severity": "warning",
      "reason": "Imported partial `_colors.scss` should be written as `colors`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Imported partial `_variables.scss` should be written as `variables`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 4,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `_backgrounds.scss` should be written as `backgrounds`",
      "linter": "ImportPath"
    },
    {
      "line": 4,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Imported partial `_base.scss` should be written as `base`",
      "linter": "ImportPath"
    },
    {
      "line": 6,
      "column": 9,
      "length": 20,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 9,
      "length": 20,
      "severity": "warning",
      "reason": "Imported partial `_mediaqueries.scss` should be written as `mediaqueries`",
      "linter": "ImportPath"
    },
    {
      "line": 7,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Imported partial `_typography.scss` should be written as `typography`",
      "linter": "ImportPath"
    },
    {
      "line": 7,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    }
  ],
  "app/sass/base/_base.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    }
  ],
  "app/sass/base/_colors.scss": [
    {
      "line": 1,
      "column": 15,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#FFFFFF` should be written as `#FFF`",
      "linter": "HexLength"
    },
    {
      "line": 1,
      "column": 15,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#FFFFFF` should be written as `#ffffff`",
      "linter": "HexNotation"
    }
  ],
  "app/sass/base/_mediaqueries.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 3 spaces",
      "linter": "Indentation"
    }
  ],
  "app/sass/base/_reset.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 11,
      "column": 3,
      "length": 26,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 12,
      "column": 3,
      "length": 30,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 93,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 106,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 110,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 114,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 131,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 138,
      "column": 11,
      "length": 8,
      "severity": "warning",
      "reason": "`0.67` should be written without a leading zero as `.67`",
      "linter": "LeadingZero"
    },
    {
      "line": 141,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 146,
      "column": 15,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#ff0` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 147,
      "column": 10,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#000` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 150,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 158,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 171,
      "column": 8,
      "length": 6,
      "severity": "warning",
      "reason": "`0.5` should be written without a leading zero as `.5`",
      "linter": "LeadingZero"
    },
    {
      "line": 175,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "`0.25` should be written without a leading zero as `.25`",
      "linter": "LeadingZero"
    },
    {
      "line": 178,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 181,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 189,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 197,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 200,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 208,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 217,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 225,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 237,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 240,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 245,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 257,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 258,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 259,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 262,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 270,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 282,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 290,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 290,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 290,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 294,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 295,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 298,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 302,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 302,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 307,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 317,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 326,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 334,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 334,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 336,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 337,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 340,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 346,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 346,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 351,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 356,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 357,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 358,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 361,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 367,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 367,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 372,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 377,
      "column": 11,
      "length": 17,
      "severity": "warning",
      "reason": "Color literals like `#c0c0c0` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 379,
      "column": 12,
      "length": 21,
      "severity": "warning",
      "reason": "`0.75` should be written without a leading zero as `.75`",
      "linter": "LeadingZero"
    },
    {
      "line": 379,
      "column": 12,
      "length": 21,
      "severity": "warning",
      "reason": "`0.35` should be written without a leading zero as `.35`",
      "linter": "LeadingZero"
    },
    {
      "line": 379,
      "column": 12,
      "length": 21,
      "severity": "warning",
      "reason": "`0.625` should be written without a leading zero as `.625`",
      "linter": "LeadingZero"
    },
    {
      "line": 382,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 388,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 389,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 392,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 400,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 409,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 412,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 427,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 432,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 433,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 434,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 435,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 436,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 437,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 439,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 440,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 441,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 442,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 443,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 444,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 445,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 445,
      "column": 3,
      "length": 9,
      "severity": "warning",
      "reason": "Properties should be ordered border, font, font-size, margin, padding, vertical-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 446,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 448,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 449,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 450,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 451,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 452,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 452,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 453,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 453,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 454,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 455,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 455,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 456,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 456,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 456,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 457,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `body` with rule on line 19",
      "linter": "MergeableSelector"
    },
    {
      "line": 457,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 458,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 458,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 459,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 459,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 459,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 460,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 460,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 460,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 461,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 461,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 462,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 462,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 462,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 463,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 464,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 465,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 465,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 466,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 466,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 467,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 468,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 468,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 469,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 469,
      "column": 3,
      "length": 13,
      "severity": "warning",
      "reason": "Property `content` already defined on line 468",
      "linter": "DuplicateProperty"
    },
    {
      "line": 470,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 471,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `table` with rule on line 416",
      "linter": "MergeableSelector"
    },
    {
      "line": 471,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 472,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 473,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 474,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 475,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 476,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 477,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 478,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 479,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 481,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 482,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 483,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 485,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 486,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 487,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 488,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 489,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 490,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 491,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 493,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 494,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 495,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 496,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 498,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 499,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 500,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 501,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 503,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 504,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 505,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 506,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 507,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 509,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 510,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 511,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    }
  ],
  "app/sass/base/_typography.scss": [
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 2,
      "length": 73,
      "severity": "warning",
      "reason": "Properties should be ordered color, font-family, font-size, line-height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 8,
      "column": 2,
      "length": 73,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 22,
      "column": 7,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered color, font-family, font-size, line-height, margin",
      "linter": "PropertySortOrder"
    },
    {
      "line": 26,
      "column": 15,
      "length": 13,
      "severity": "warning",
      "reason": "Shorthand form for property `margin` should be written more concisely as `10px 0 30px` instead of `10px 0 30px 0`",
      "linter": "Shorthand"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 55,
      "column": 3,
      "length": 15,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, color, font-size, padding",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/components/_all.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 1,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Imported partial `_c-buttons.scss` should be written as `c-buttons`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Imported partial `_c-forms.scss` should be written as `c-forms`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Imported partial `_c-icons.scss` should be written as `c-icons`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 4,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 4,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Imported partial `_c-tooltip.scss` should be written as `c-tooltip`",
      "linter": "ImportPath"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Imported partial `_c-alerts.scss` should be written as `c-alerts`",
      "linter": "ImportPath"
    }
  ],
  "app/sass/components/_c-alerts.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 2,
      "column": 5,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-radius, margin-bottom, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 7,
      "column": 29,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 7,
      "column": 44,
      "length": 3,
      "severity": "warning",
      "reason": "`0.5` should be written without a leading zero as `.5`",
      "linter": "LeadingZero"
    },
    {
      "line": 8,
      "column": 6,
      "length": 33,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 8,
      "column": 20,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 12,
      "column": 29,
      "length": 11,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 12,
      "column": 41,
      "length": 3,
      "severity": "warning",
      "reason": "`0.5` should be written without a leading zero as `.5`",
      "linter": "LeadingZero"
    },
    {
      "line": 13,
      "column": 9,
      "length": 31,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 13,
      "column": 9,
      "length": 31,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 13,
      "column": 24,
      "length": 11,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 17,
      "column": 29,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 17,
      "column": 44,
      "length": 3,
      "severity": "warning",
      "reason": "`0.5` should be written without a leading zero as `.5`",
      "linter": "LeadingZero"
    },
    {
      "line": 18,
      "column": 6,
      "length": 34,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 18,
      "column": 6,
      "length": 34,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 18,
      "column": 21,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 22,
      "column": 29,
      "length": 13,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 22,
      "column": 43,
      "length": 3,
      "severity": "warning",
      "reason": "`0.5` should be written without a leading zero as `.5`",
      "linter": "LeadingZero"
    },
    {
      "line": 23,
      "column": 9,
      "length": 33,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 23,
      "column": 9,
      "length": 33,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 23,
      "column": 24,
      "length": 13,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    }
  ],
  "app/sass/components/_c-buttons.scss": [
    {
      "line": 2,
      "column": 3,
      "length": 21,
      "severity": "warning",
      "reason": "Properties should be ordered background-image, border, border-radius, cursor, display, font-weight, margin-bottom, outline, padding, pointer-events, position, text-align, touch-action, vertical-align, white-space",
      "linter": "PropertySortOrder"
    },
    {
      "line": 14,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 0 spaces, but was indented 1 spaces",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 4,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, box-shadow, color, transition",
      "linter": "PropertySortOrder"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 16,
      "length": 34,
      "severity": "warning",
      "reason": "`0.30` should be written without a leading zero as `.30`",
      "linter": "LeadingZero"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 43,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 43,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 44,
      "column": 5,
      "length": 26,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, box-shadow, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 49,
      "column": 6,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered box-shadow, top",
      "linter": "PropertySortOrder"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 53,
      "column": 7,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered box-shadow, font-size, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 57,
      "column": 9,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered box-shadow, top",
      "linter": "PropertySortOrder"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 69,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 70,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 70,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 70,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 71,
      "column": 4,
      "length": 26,
      "severity": "warning",
      "reason": "Properties should be ordered color, text-decoration",
      "linter": "PropertySortOrder"
    },
    {
      "line": 78,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 79,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 79,
      "column": 2,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered background, border-radius, color, height, margin, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 80,
      "column": 2,
      "length": 10,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 87,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 87,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 88,
      "column": 3,
      "length": 15,
      "severity": "warning",
      "reason": "Properties should be ordered display, font-size",
      "linter": "PropertySortOrder"
    },
    {
      "line": 89,
      "column": 3,
      "length": 13,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 92,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 93,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 93,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 95,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 98,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 101,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 101,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 102,
      "column": 10,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 106,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 107,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 108,
      "column": 6,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered box-shadow, top",
      "linter": "PropertySortOrder"
    },
    {
      "line": 112,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 113,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 113,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 115,
      "column": 3,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered height, line-height, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 117,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 117,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 126,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 127,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 129,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 129,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 130,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer using placeholder selectors (e.g. %some-placeholder) with @extend",
      "linter": "PlaceholderInExtend"
    },
    {
      "line": 135,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.btn + .btn` with rule on line 1",
      "linter": "MergeableSelector"
    },
    {
      "line": 139,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 140,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 141,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    }
  ],
  "app/sass/components/_c-forms.scss": [
    {
      "line": 4,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, background-image, border, border-radius, color, display, font-size, height, line-height, margin, padding, transition, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 23,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 17,
      "length": 21,
      "severity": "warning",
      "reason": "`0.30` should be written without a leading zero as `.30`",
      "linter": "LeadingZero"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 60,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying attribute selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 60,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `input[type=\"search\"]` with rule on line 56",
      "linter": "MergeableSelector"
    },
    {
      "line": 64,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 65,
      "column": 3,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered border, padding, width",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/components/_c-icons.scss": [
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 7,
      "column": 2,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered font-family, -moz-osx-font-smoothing, -webkit-font-smoothing, font-style, font-variant, font-weight, line-height, speak, text-transform",
      "linter": "PropertySortOrder"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 19,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 22,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 25,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 31,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 34,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 40,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 43,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 43,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 46,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 49,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 52,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 55,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 58,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 61,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 64,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 64,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 65,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 67,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 70,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 70,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 73,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 73,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 74,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 76,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 76,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 79,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 79,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 82,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 85,
      "column": 11,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    }
  ],
  "app/sass/components/_c-tooltip.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 2,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered cursor, position, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 3,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border-radius, bottom, color, content, font-size, left, line-height, margin-bottom, margin-left, opacity, padding, pointer-events, position, text-align, visibility, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 19,
      "column": 10,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 26,
      "column": 3,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered border-left, border-right, border-top, bottom, content, font-size, left, line-height, margin-left, opacity, pointer-events, position, visibility, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 37,
      "column": 12,
      "length": 3,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 43,
      "column": 4,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered opacity, visibility",
      "linter": "PropertySortOrder"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 47,
      "column": 4,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered opacity, visibility",
      "linter": "PropertySortOrder"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/helpers/_helpers.scss": [
    {
      "line": 3,
      "column": 5,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered clear, content, display",
      "linter": "PropertySortOrder"
    },
    {
      "line": 3,
      "column": 14,
      "length": 2,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "@include declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 24,
      "column": 5,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered animation, height, position, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 43,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 49,
      "column": 3,
      "length": 15,
      "severity": "warning",
      "reason": "Properties should be ordered display, height, max-width",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/layouts/_admin.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `article-list__container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered border-bottom, display, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 5,
      "column": 18,
      "length": 14,
      "severity": "warning",
      "reason": "Color literals like `#ccc` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected item on line 6 to appear before line 3. Rule sets should be ordered as follows: `@extends`, `@includes` without `@content`, properties, `@includes` with `@content`, nested rule sets",
      "linter": "DeclarationOrder"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 8,
      "column": 4,
      "length": 21,
      "severity": "warning",
      "reason": "Properties should be ordered color, text-decoration",
      "linter": "PropertySortOrder"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 10,
      "column": 4,
      "length": 1,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `post-list__title` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 15,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `post-list__delete` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 19,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, text-align, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `post-list__edit` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 24,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, text-align, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 29,
      "column": 12,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `create-post__form-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 38,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `create-post__preview-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 43,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 50,
      "column": 4,
      "length": 16,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 50,
      "column": 4,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-radius, margin-bottom, min-height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 51,
      "column": 4,
      "length": 18,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 57,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 57,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered display, position",
      "linter": "PropertySortOrder"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-post__form-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 63,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-post__preview-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 68,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 75,
      "column": 4,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-radius, margin-bottom, min-height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 75,
      "column": 4,
      "length": 16,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 76,
      "column": 4,
      "length": 18,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__form-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 85,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-radius, float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 91,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__list-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 91,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 92,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 95,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__subcategory-holder` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 98,
      "column": 12,
      "length": 10,
      "severity": "warning",
      "reason": "Shorthand form for property `padding` should be written more concisely as `10px 0 0` instead of `10px 0 0 0`",
      "linter": "Shorthand"
    },
    {
      "line": 99,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 99,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__subcategory--input` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 99,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 100,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 101,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 102,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__subcategory--delete` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 104,
      "column": 4,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, margin-top, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 112,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `edit-tag__list-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 113,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 114,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered border-bottom, display, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 116,
      "column": 18,
      "length": 14,
      "severity": "warning",
      "reason": "Color literals like `#ccc` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 117,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected item on line 117 to appear before line 114. Rule sets should be ordered as follows: `@extends`, `@includes` without `@content`, properties, `@includes` with `@content`, nested rule sets",
      "linter": "DeclarationOrder"
    },
    {
      "line": 118,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 119,
      "column": 12,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 120,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 121,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `category__subcategory` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `subcategory__title` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 123,
      "column": 5,
      "length": 20,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 126,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 127,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `subcategory__status` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 127,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 127,
      "column": 5,
      "length": 21,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 130,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 131,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 131,
      "column": 5,
      "length": 8,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    }
  ],
  "app/sass/layouts/_all.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 1,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Imported partial `_aside.scss` should be written as `aside`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 14,
      "severity": "warning",
      "reason": "Imported partial `_layout.scss` should be written as `layout`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 14,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Imported partial `_menu.scss` should be written as `menu`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 4,
      "column": 9,
      "length": 11,
      "severity": "warning",
      "reason": "Imported partial `_nav.scss` should be written as `nav`",
      "linter": "ImportPath"
    },
    {
      "line": 4,
      "column": 9,
      "length": 11,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Imported partial `_admin.scss` should be written as `admin`",
      "linter": "ImportPath"
    },
    {
      "line": 5,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 6,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 9,
      "length": 13,
      "severity": "warning",
      "reason": "Imported partial `_login.scss` should be written as `login`",
      "linter": "ImportPath"
    }
  ],
  "app/sass/layouts/_aside.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__avatar` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__legend` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered margin-top, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__social-links` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered margin-top, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__twitter` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__legend` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.aside__legend` with rule on line 7",
      "linter": "MergeableSelector"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    }
  ],
  "app/sass/layouts/_layout.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 2,
      "column": 2,
      "length": 22,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, margin, max-width, min-height, padding, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 10,
      "length": 16,
      "severity": "warning",
      "reason": "Shorthand form for property `margin` should be written more concisely as `60px auto 0` instead of `60px auto 0 auto`",
      "linter": "Shorthand"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected item on line 8 to appear before line 2. Rule sets should be ordered as follows: `@extends`, `@includes` without `@content`, properties, `@includes` with `@content`, nested rule sets",
      "linter": "DeclarationOrder"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 3,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, content, display, height, left, position, top, width, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 14,
      "column": 39,
      "length": 3,
      "severity": "warning",
      "reason": "`0.4` should be written without a leading zero as `.4`",
      "linter": "LeadingZero"
    },
    {
      "line": 16,
      "column": 3,
      "length": 5,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 0 spaces",
      "linter": "Indentation"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `container__aside` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "@include declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `container__main-content` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "@include declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 42,
      "column": 3,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered float, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `main-content__posts` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `post__content` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 53,
      "column": 2,
      "length": 22,
      "severity": "warning",
      "reason": "Properties should be ordered border-bottom, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 53,
      "column": 11,
      "length": 13,
      "severity": "warning",
      "reason": "Shorthand form for property `padding` should be written more concisely as `40px 0 30px` instead of `40px 0 30px 0`",
      "linter": "Shorthand"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 58,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 58,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, color, content, display, font-size, font-weight, height, line-height, margin, position, text-align, top, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 66,
      "column": 23,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 74,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 75,
      "column": 28,
      "length": 11,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 76,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 76,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, margin, max-width, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 78,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    }
  ],
  "app/sass/layouts/_login.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 2,
      "column": 2,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered margin, max-width, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    }
  ],
  "app/sass/layouts/_menu.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 4,
      "column": 11,
      "length": 19,
      "severity": "warning",
      "reason": "Shorthand form for property `padding` should be written more concisely as `60px 10px 10px` instead of `60px 10px 10px 10px`",
      "linter": "Shorthand"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `menu__container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.collapse.in` with rule on line 18",
      "linter": "MergeableSelector"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 25,
      "column": 4,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered height, overflow, position, transition-duration, transition-property, transition-timing-function",
      "linter": "PropertySortOrder"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `menu__first-level` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 35,
      "column": 4,
      "length": 17,
      "severity": "warning",
      "reason": "Properties should be ordered border-bottom, color, line-height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 36,
      "column": 34,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 36,
      "column": 49,
      "length": 3,
      "severity": "warning",
      "reason": "`0.3` should be written without a leading zero as `.3`",
      "linter": "LeadingZero"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 39,
      "column": 4,
      "length": 25,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 40,
      "column": 5,
      "length": 58,
      "severity": "warning",
      "reason": "Properties should be ordered display, float, line-height, transform, transition",
      "linter": "PropertySortOrder"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 46,
      "column": 4,
      "length": 7,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 48,
      "column": 5,
      "length": 21,
      "severity": "warning",
      "reason": "Properties should be ordered color, display, line-height, padding, text-align, text-decoration, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 51,
      "column": 5,
      "length": 10,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 60,
      "column": 4,
      "length": 9,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__avatar` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 76,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__legend` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 82,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered margin-top, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 87,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 88,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__social-links` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 89,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 89,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered margin-top, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 91,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 91,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 93,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 97,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 101,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 102,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__twitter` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 106,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.aside__legend` with rule on line 81",
      "linter": "MergeableSelector"
    },
    {
      "line": 106,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `aside__legend` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 107,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 108,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 108,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    }
  ],
  "app/sass/layouts/_nav.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 2,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, box-shadow, display, height, left, position, top, width, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 2,
      "length": 5,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 2,
      "length": 6,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 14,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 8,
      "column": 36,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 8,
      "column": 38,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 8,
      "column": 40,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 8,
      "column": 42,
      "length": 4,
      "severity": "warning",
      "reason": "`0.25` should be written without a leading zero as `.25`",
      "linter": "LeadingZero"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 13,
      "column": 3,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered margin, max-width, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected item on line 17 to appear before line 13. Rule sets should be ordered as follows: `@extends`, `@includes` without `@content`, properties, `@includes` with `@content`, nested rule sets",
      "linter": "DeclarationOrder"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__logo` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 26,
      "column": 4,
      "length": 7,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__title` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "@include declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "@include declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__actions` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__search-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 56,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered display, height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `nav__menu-container` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 64,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered display, height",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/main.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 1,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Imported partial `_main-color.scss` should be written as `main-color`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Imported partial `mixins/_all.scss` should be written as `mixins/all`",
      "linter": "ImportPath"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Imported partial `base/_all.scss` should be written as `base/all`",
      "linter": "ImportPath"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 7,
      "column": 9,
      "length": 22,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 7,
      "column": 9,
      "length": 22,
      "severity": "warning",
      "reason": "Imported partial `components/_all.scss` should be written as `components/all`",
      "linter": "ImportPath"
    },
    {
      "line": 9,
      "column": 9,
      "length": 23,
      "severity": "warning",
      "reason": "Imported partial `helpers/_helpers.scss` should be written as `helpers/helpers`",
      "linter": "ImportPath"
    },
    {
      "line": 9,
      "column": 9,
      "length": 23,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 11,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 11,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `layouts/_all.scss` should be written as `layouts/all`",
      "linter": "ImportPath"
    },
    {
      "line": 13,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 13,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `vendors/_all.scss` should be written as `vendors/all`",
      "linter": "ImportPath"
    }
  ],
  "app/sass/mixins/_all.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Imported partial `_font-face.scss` should be written as `font-face`",
      "linter": "ImportPath"
    },
    {
      "line": 1,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 9,
      "length": 20,
      "severity": "warning",
      "reason": "Imported partial `_mediaqueries.scss` should be written as `mediaqueries`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 20,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    }
  ],
  "app/sass/mixins/_font-face.scss": [
    {
      "line": 6,
      "column": 77,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 161,
      "length": 6,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 231,
      "length": 10,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/mixins/_mediaqueries.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 3 spaces",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 3 spaces",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 4,
      "length": 26,
      "severity": "warning",
      "reason": "@else should be placed on same line as previous curly brace",
      "linter": "ElsePlacement"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 5,
      "length": 26,
      "severity": "warning",
      "reason": "@else should be placed on same line as previous curly brace",
      "linter": "ElsePlacement"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 3 spaces",
      "linter": "Indentation"
    },
    {
      "line": 11,
      "column": 4,
      "length": 27,
      "severity": "warning",
      "reason": "@else should be placed on same line as previous curly brace",
      "linter": "ElsePlacement"
    },
    {
      "line": 14,
      "column": 3,
      "length": 30,
      "severity": "warning",
      "reason": "@else should be placed on same line as previous curly brace",
      "linter": "ElsePlacement"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 4 spaces, but was indented 5 spaces",
      "linter": "Indentation"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/themes/_orange.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 1,
      "column": 14,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#E67E22` should be written as `#e67e22`",
      "linter": "HexNotation"
    }
  ],
  "app/sass/themes/_purple.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 1,
      "column": 14,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#8E44AD` should be written as `#8e44ad`",
      "linter": "HexNotation"
    }
  ],
  "app/sass/vendors/_alertify.scss": [
    {
      "line": 1,
      "column": 31,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 1,
      "column": 33,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 1,
      "column": 35,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 9,
      "length": 40,
      "severity": "warning",
      "reason": "Properties should be ordered border-radius, box-shadow, color, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 11,
      "column": 16,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 18,
      "column": 34,
      "length": 13,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 19,
      "column": 25,
      "length": 13,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 22,
      "column": 34,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 23,
      "column": 25,
      "length": 14,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 30,
      "column": 5,
      "length": 15,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, bottom, height, left, position, right, top, width, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 60,
      "column": 9,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered margin, position, top, transform, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 67,
      "column": 13,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered background, box-shadow, margin, max-width, padding, text-align, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 72,
      "column": 25,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 73,
      "column": 45,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 47,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 49,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 74,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 76,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 78,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 105,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 107,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 73,
      "column": 109,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 77,
      "column": 11,
      "length": 22,
      "severity": "warning",
      "reason": "Properties should be ordered margin, margin-bottom, padding, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 84,
      "column": 13,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered font-size, margin-bottom, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 88,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 88,
      "column": 13,
      "length": 8,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 91,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 96,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 96,
      "column": 13,
      "length": 68,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 98,
      "column": 15,
      "length": 23,
      "severity": "warning",
      "reason": "Properties should be ordered align-items, background, border, border-radius, box-sizing, color, cursor, display, font-size, line-height, margin, min-height, min-width, outline, padding, position, text-align, text-decoration, text-transform, white-space",
      "linter": "PropertySortOrder"
    },
    {
      "line": 100,
      "column": 27,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 100,
      "column": 29,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 100,
      "column": 31,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 100,
      "column": 33,
      "length": 4,
      "severity": "warning",
      "reason": "`0.87` should be written without a leading zero as `.87`",
      "linter": "LeadingZero"
    },
    {
      "line": 119,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 119,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 120,
      "column": 40,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 120,
      "column": 42,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 120,
      "column": 44,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector should have depth of applicability no greater than 3, but was 4",
      "linter": "SelectorDepth"
    },
    {
      "line": 133,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.alertify-logs` with rule on line 8",
      "linter": "MergeableSelector"
    },
    {
      "line": 135,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 136,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 138,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 138,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 141,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 142,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Empty rule",
      "linter": "EmptyRule"
    },
    {
      "line": 142,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 148,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Empty rule",
      "linter": "EmptyRule"
    },
    {
      "line": 148,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 155,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 155,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 157,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 159,
      "column": 13,
      "length": 31,
      "severity": "warning",
      "reason": "Properties should be ordered float, height, transform",
      "linter": "PropertySortOrder"
    },
    {
      "line": 162,
      "column": 13,
      "length": 7,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 164,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 165,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 165,
      "column": 13,
      "length": 10,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 171,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 173,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 176,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 176,
      "column": 13,
      "length": 7,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 177,
      "column": 17,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered opacity, right",
      "linter": "PropertySortOrder"
    },
    {
      "line": 179,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 180,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 180,
      "column": 13,
      "length": 10,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 181,
      "column": 17,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered opacity, right",
      "linter": "PropertySortOrder"
    },
    {
      "line": 187,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 190,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 191,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Empty rule",
      "linter": "EmptyRule"
    },
    {
      "line": 191,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 197,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 197,
      "column": 13,
      "length": 4,
      "severity": "warning",
      "reason": "Empty rule",
      "linter": "EmptyRule"
    },
    {
      "line": 203,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 204,
      "column": 9,
      "length": 22,
      "severity": "warning",
      "reason": "Properties should be ordered backface-visibility, box-sizing, clear, perspective, position, transition",
      "linter": "PropertySortOrder"
    },
    {
      "line": 211,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Unnecessary parent selector (&)",
      "linter": "UnnecessaryParentReference"
    },
    {
      "line": 212,
      "column": 13,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered margin, max-height, opacity, overflow, padding, pointer-events",
      "linter": "PropertySortOrder"
    },
    {
      "line": 220,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `&.show` with rule on line 211",
      "linter": "MergeableSelector"
    },
    {
      "line": 222,
      "column": 13,
      "length": 10,
      "severity": "warning",
      "reason": "Properties should be ordered margin-top, max-height, opacity, padding",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/vendors/_all.scss": [
    {
      "line": 1,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Imported partial `_alertify.scss` should be written as `alertify`",
      "linter": "ImportPath"
    },
    {
      "line": 1,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Imported partial `_parsley.scss` should be written as `parsley`",
      "linter": "ImportPath"
    },
    {
      "line": 2,
      "column": 9,
      "length": 15,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 9,
      "length": 17,
      "severity": "warning",
      "reason": "Imported partial `_slidebars.scss` should be written as `slidebars`",
      "linter": "ImportPath"
    },
    {
      "line": 4,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Imported partial `_tabs.scss` should be written as `tabs`",
      "linter": "ImportPath"
    },
    {
      "line": 4,
      "column": 9,
      "length": 12,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 5,
      "column": 9,
      "length": 16,
      "severity": "warning",
      "reason": "Imported partial `_scrollup.scss` should be written as `scrollup`",
      "linter": "ImportPath"
    }
  ],
  "app/sass/vendors/_parsley.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 4,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 4,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#468847` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 5,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#DFF0D8` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 5,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#DFF0D8` should be written as `#dff0d8`",
      "linter": "HexNotation"
    },
    {
      "line": 6,
      "column": 11,
      "length": 17,
      "severity": "warning",
      "reason": "Color literals like `#D6E9C6` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 6,
      "column": 11,
      "length": 17,
      "severity": "warning",
      "reason": "Color `#D6E9C6` should be written as `#d6e9c6`",
      "linter": "HexNotation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 12,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, color",
      "linter": "PropertySortOrder"
    },
    {
      "line": 12,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#B94A48` should be written as `#b94a48`",
      "linter": "HexNotation"
    },
    {
      "line": 12,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#B94A48` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 13,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#F2DEDE` should be written as `#f2dede`",
      "linter": "HexNotation"
    },
    {
      "line": 13,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#F2DEDE` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 14,
      "column": 11,
      "length": 17,
      "severity": "warning",
      "reason": "Color literals like `#EED3D7` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 14,
      "column": 11,
      "length": 17,
      "severity": "warning",
      "reason": "Color `#EED3D7` should be written as `#eed3d7`",
      "linter": "HexNotation"
    },
    {
      "line": 18,
      "column": 3,
      "length": 17,
      "severity": "warning",
      "reason": "Properties should be ordered font-size, line-height, list-style-type, margin, opacity, padding, -moz-transition, -o-transition, -webkit-transition, transition",
      "linter": "PropertySortOrder"
    },
    {
      "line": 21,
      "column": 14,
      "length": 5,
      "severity": "warning",
      "reason": "`0.9` should be written without a leading zero as `.9`",
      "linter": "LeadingZero"
    },
    {
      "line": 22,
      "column": 16,
      "length": 5,
      "severity": "warning",
      "reason": "`0.9` should be written without a leading zero as `.9`",
      "linter": "LeadingZero"
    },
    {
      "line": 26,
      "column": 3,
      "length": 30,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 27,
      "column": 3,
      "length": 32,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 28,
      "column": 3,
      "length": 35,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.parsley-errors-list.filled` with rule on line 17",
      "linter": "MergeableSelector"
    }
  ],
  "app/sass/vendors/_scrollup.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `scrollUp` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 2,
      "column": 3,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered bottom, display, right",
      "linter": "PropertySortOrder"
    }
  ],
  "app/sass/vendors/_slidebars.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 28,
      "column": 2,
      "length": 30,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 28,
      "column": 2,
      "length": 30,
      "severity": "warning",
      "reason": "Properties should be ordered -moz-box-sizing, -webkit-box-sizing, box-sizing",
      "linter": "PropertySortOrder"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 29,
      "column": 5,
      "length": 27,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 43,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 43,
      "column": 2,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered height, min-height, position",
      "linter": "PropertySortOrder"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `html.sb-scroll-lock.sb-active:not(.sb-static)` with rule on line 38",
      "linter": "MergeableSelector"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 57,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 57,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 60,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 65,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `#sb-site:before, #sb-site:after, .sb-site-container:before, .sb-site-container:after` with rule on line 66",
      "linter": "MergeableSelector"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 73,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 80,
      "column": 2,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, display, height, overflow-y, position, top, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 86,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 86,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 89,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 90,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 90,
      "column": 2,
      "length": 36,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 90,
      "column": 33,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 94,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 94,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 98,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 98,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 101,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 103,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 106,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.sb-slidebar.sb-active` with rule on line 79",
      "linter": "MergeableSelector"
    },
    {
      "line": 107,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 107,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 111,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 111,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 115,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 115,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 118,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 119,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 119,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.sb-slidebar` with rule on line 79",
      "linter": "MergeableSelector"
    },
    {
      "line": 123,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 127,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 131,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 132,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 136,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 140,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 145,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 146,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 150,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 154,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 159,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 160,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 164,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 168,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 173,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 174,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 178,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 182,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 187,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 188,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 192,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 196,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 201,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 205,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 205,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 206,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 206,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 206,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 206,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 206,
      "column": 2,
      "length": 35,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 206,
      "column": 2,
      "length": 35,
      "severity": "warning",
      "reason": "Properties should be ordered -webkit-backface-visibility, -moz-transform, -o-transform, -webkit-transform, transform, -moz-transition, -o-transition, -webkit-transition, transition, -webkit-transition-property",
      "linter": "PropertySortOrder"
    },
    {
      "line": 206,
      "column": 32,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 207,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 207,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 207,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 207,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 207,
      "column": 5,
      "length": 32,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 207,
      "column": 32,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 208,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 208,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 208,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 208,
      "column": 7,
      "length": 30,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 208,
      "column": 32,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 209,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 209,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected 0 spaces between parentheses instead of 1",
      "linter": "SpaceBetweenParens"
    },
    {
      "line": 209,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 209,
      "column": 32,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 211,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 211,
      "column": 2,
      "length": 48,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 212,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 212,
      "column": 5,
      "length": 45,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 212,
      "column": 5,
      "length": 45,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 213,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 213,
      "column": 7,
      "length": 43,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 213,
      "column": 7,
      "length": 43,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 214,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 214,
      "column": 10,
      "length": 40,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 216,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 216,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 216,
      "column": 2,
      "length": 59,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 217,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 217,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 217,
      "column": 2,
      "length": 35,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 220,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 225,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 225,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 226,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/vendors/_tabs.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 2,
      "column": 11,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 3,
      "column": 12,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 7,
      "column": 3,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered cursor, display, float, font-size, font-weight, list-style, margin, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 18,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, clear, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 18,
      "column": 12,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 19,
      "column": 21,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 25,
      "column": 3,
      "length": 12,
      "severity": "warning",
      "reason": "Properties should be ordered cursor, display, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 35,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border-bottom, border-bottom, margin-bottom, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 35,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 36,
      "column": 3,
      "length": 30,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 37,
      "column": 3,
      "length": 39,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 37,
      "column": 12,
      "length": 30,
      "severity": "warning",
      "reason": "Shorthand form for property `padding` should be written more concisely as `12px 14px 14px` instead of `12px 14px 14px 14px`",
      "linter": "Shorthand"
    },
    {
      "line": 38,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 38,
      "column": 3,
      "length": 19,
      "severity": "warning",
      "reason": "Property `border-bottom` already defined on line 35",
      "linter": "DuplicateProperty"
    },
    {
      "line": 39,
      "column": 21,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.resp-tab-content` with rule on line 29",
      "linter": "MergeableSelector"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `h2` with rule on line 23",
      "linter": "MergeableSelector"
    },
    {
      "line": 52,
      "column": 5,
      "length": 15,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-top, font-size, margin, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 54,
      "column": 17,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 55,
      "column": 13,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 57,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 59,
      "column": 5,
      "length": 47,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 59,
      "column": 20,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 60,
      "column": 5,
      "length": 29,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 60,
      "column": 20,
      "length": 14,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 61,
      "column": 5,
      "length": 29,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 64,
      "column": 5,
      "length": 48,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 64,
      "column": 5,
      "length": 48,
      "severity": "warning",
      "reason": "Properties should be ordered background, border-bottom",
      "linter": "PropertySortOrder"
    },
    {
      "line": 65,
      "column": 17,
      "length": 4,
      "severity": "warning",
      "reason": "Color `blue` should be written in hexadecimal form as `#0000ff`",
      "linter": "ColorKeyword"
    },
    {
      "line": 65,
      "column": 17,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `blue` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 69,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 74,
      "column": 5,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered float, margin-top, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 76,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 78,
      "column": 5,
      "length": 14,
      "severity": "warning",
      "reason": "Properties should be ordered border-bottom-left-radius, border-top-left-radius, cursor, display, float, margin, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 79,
      "column": 5,
      "length": 29,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 87,
      "column": 5,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border, border-radius, clear, float, min-height, padding, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 95,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 97,
      "column": 5,
      "length": 12,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 98,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 99,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 100,
      "column": 5,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, border-right, color, margin-right, padding, position, z-index",
      "linter": "PropertySortOrder"
    },
    {
      "line": 100,
      "column": 5,
      "length": 18,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 105,
      "column": 5,
      "length": 29,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 106,
      "column": 5,
      "length": 39,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 112,
      "column": 3,
      "length": 8,
      "severity": "warning",
      "reason": "Properties should be ordered border-left, border-right, border-top, float, height, margin-top, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 121,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 121,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `h2.resp-tab-active` with rule on line 50",
      "linter": "MergeableSelector"
    },
    {
      "line": 122,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 123,
      "column": 5,
      "length": 12,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 124,
      "column": 5,
      "length": 34,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-bottom, border-left, border-right",
      "linter": "PropertySortOrder"
    },
    {
      "line": 126,
      "column": 20,
      "length": 18,
      "severity": "warning",
      "reason": "Color `#9B9797` should be written as `#9b9797`",
      "linter": "HexNotation"
    },
    {
      "line": 126,
      "column": 20,
      "length": 18,
      "severity": "warning",
      "reason": "Color literals like `#9B9797` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 127,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 128,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Expected item on line 128 to appear before line 122. Rule sets should be ordered as follows: `@extends`, `@includes` without `@content`, properties, `@includes` with `@content`, nested rule sets",
      "linter": "DeclarationOrder"
    },
    {
      "line": 128,
      "column": 3,
      "length": 30,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 128,
      "column": 15,
      "length": 18,
      "severity": "warning",
      "reason": "Color `#DBDBDB` should be written as `#dbdbdb`",
      "linter": "HexNotation"
    },
    {
      "line": 128,
      "column": 15,
      "length": 18,
      "severity": "warning",
      "reason": "Color literals like `#DBDBDB` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 131,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 134,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 136,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 139,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 140,
      "column": 7,
      "length": 47,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 146,
      "column": 3,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered margin, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 147,
      "column": 11,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 154,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `h2.resp-accordion:first-child` with rule on line 50",
      "linter": "MergeableSelector"
    },
    {
      "line": 154,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 155,
      "column": 3,
      "length": 44,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 158,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 160,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 162,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 163,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid qualifying class selectors with an element.",
      "linter": "QualifyingElement"
    },
    {
      "line": 165,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 169,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 171,
      "column": 7,
      "length": 12,
      "severity": "warning",
      "reason": "`border: 0 is preferred over `border: none`",
      "linter": "BorderZero"
    },
    {
      "line": 172,
      "column": 7,
      "length": 11,
      "severity": "warning",
      "reason": "Properties should be ordered border, clear, float, min-height, width",
      "linter": "PropertySortOrder"
    },
    {
      "line": 177,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 179,
      "column": 5,
      "length": 24,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    },
    {
      "line": 180,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 182,
      "column": 5,
      "length": 47,
      "severity": "warning",
      "reason": "!important should not be used",
      "linter": "ImportantRule"
    }
  ]
}}